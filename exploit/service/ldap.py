# coding=utf-8
# @Author   : zpchcbd HG team
# @Time     : 2021-09-09 3:23
import sys

import ldap3
# from async_timeout import timeout
from colorama import Fore
from tqdm import tqdm
import asyncio
# import aioldap

if sys.platform == 'win32':
    asyncio.set_event_loop_policy(asyncio.WindowsSelectorEventLoopPolicy())


# @ske大师兄
async def checkUnauth(addr):
    # try:
    ldap3Server = ldap3.Server(host=addr.split(':')[0], port=389, allowed_referral_hosts=[('*', False)],
                               get_info=ldap3.ALL,
                               connect_timeout=30)  # port就默认使用389，因为ldap查出来的端口是636，但是实际利用得用389端口

    # aioServer = aioldap.Server(host=addr.split(':')[0], port=389)
    ldap3Conn = ldap3.Connection(ldap3Server, auto_bind=True)
    # aioconn = aioldap.LDAPConnection(ldap3Server)
    if len(ldap3Server.info.naming_contexts) > 0:
        for _ in ldap3Server.info.naming_contexts:
            # with timeout(1):
            if ldap3Conn.search(_, '(objectClass=inetOrgPerson)'):
                # if res:
                #     print(res)
                naming_contexts = _.encode('utf8')
                # print(naming_contexts)
                tqdm.write(Fore.RED + '[+] target maybe ldap unauth, {}'.format(addr))
                return {'name': 'unauth', 'url': str(addr), 'software': 'ldap'}


async def ldapScan(addr, pbar):
    vulList = []
    a = await checkUnauth(addr)
    if a is not None:
        vulList.append(a)
    pbar.update(1)
    return vulList

if __name__ == '__main__':
    pass
