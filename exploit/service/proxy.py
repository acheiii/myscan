# coding=utf-8
# @Author   : zpchcbd HG team
# @Time     : 2021-09-22 10:52
import aiohttp
import asyncio
from colorama import Fore
from tqdm import tqdm


async def checkUnauth(addr):
    try:
        # http proxy
        proxy = 'http://{}:{}'.format(addr.split(':')[0], str(addr.split(':')[1]))
        url = 'http://example.com/'
        async with aiohttp.ClientSession() as session:
            async with session.get(url=url, proxy=proxy) as response:
                if response is not None:
                    text = await response.text()
                    if 'More information...' in text:
                        tqdm.write(Fore.RED + '[+] Target maybe support proxy unauth, {}'.format(addr))
                        return {'name': 'unauth', 'url': addr, 'software': 'proxy'}
    except asyncio.TimeoutError:
        pass
    except Exception:
        pass


async def proxyScan(addr, pbar):
    vulList = []
    a = await checkUnauth(addr)
    if a is not None:
        vulList.append(a)
    pbar.update(1)
    return vulList


if __name__ == '__main__':
    pass
