# coding=utf-8
# @Author   : zpchcbd HG team
# @Time     : 2021-08-27 18:35
from async_timeout import timeout
from colorama import Fore
from tqdm import tqdm
import asyncio
# from exploit.service.base import *


# unauth
async def checkUnauth(addr):
    try:
        with timeout(5):
            reader, writer = await asyncio.open_connection(addr.split(':')[0], int(addr.split(':')[1]))
            data = bytes.fromhex('3a000000a741000000000000d40700000000000061646d696e2e24636d640000000000ffffffff130000001069736d6173746572000100000000')
            writer.write(data)
            result = await reader.read(1024)
            if b'ismaster' in result:
                getLogData = bytes.fromhex('480000000200000000000000d40700000000000061646d696e2e24636d6400000000000100000021000000026765744c6f670010000000737461727475705761726e696e67730000')
                writer.write(getLogData)
                result = await reader.read(1024)
                if b'totalLinesWritten' in result:
                    tqdm.write(Fore.RED + '[+] Target maybe mongodb unauth, {}'.format(addr))
                    return {'name': 'unauth', 'url': addr, 'software': 'mongodb'}
    except asyncio.TimeoutError:
        pass
    except Exception:
        pass
    finally:
        try:
            writer.close()
        except NameError:
            pass


async def mongodbScan(addr, pbar):
    vulList = []
    a = await checkUnauth(addr)
    if a is not None:
        vulList.append(a)
    pbar.update(1)
    return vulList
