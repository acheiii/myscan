# coding=utf-8
# @Author   : zpchcbd HG team
# @Time     : 2021-08-27 18:35
from async_timeout import timeout

from exploit.service.base import *


async def redisScan(addr):
    vulList = []
    try:
        with timeout(1):
            reader, writer = await asyncio.open_connection(addr.split(':')[0], int(addr.split(':')[1]))
            writer.write(b'INFO\n')
            await writer.drain()
            result = await reader.read(1024)
            if b"redis_version" in result:
                vulList.append({'name': 'unauth', 'url': str(addr), 'software': 'redis'})
    except:
        return False, ''
    finally:
        writer.close()

    '''Redis弱口令漏洞'''
    try:
        with timeout(5):
            reader, writer = await asyncio.open_connection(addr.split(':')[0], int(addr.split(':')[1]))
            writer.write(b'INFO\n')
            await writer.drain()
            result = await reader.read(1024)
            if b"Authentication" in result:
                for _pass in ['1', '2', '3', '4']:
                    reader, writer = await asyncio.open_connection(addr.split(':')[0], int(addr.split(':')[1]))
                    writer.write(b"AUTH %s\r\n" % _pass)
                    await writer.drain()
                    result = await reader.read(1024)
                    if '+OK' in result:
                        vulList.append({'name': 'weakpass', 'url': str(addr+'|'+str(_pass)), 'software': 'redis'})
                    return True, vulList
    except:
        return False, ''
    finally:
        writer.close()
