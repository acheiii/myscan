# coding=utf-8
# @Author   : zpchcbd HG team
# @Time     : 2021-09-02 22:06
import sys

from async_timeout import timeout
from colorama import Fore
from tqdm import tqdm

# from exploit.service.base import *
import aiopg
import asyncio

if sys.platform == 'win32':
    asyncio.set_event_loop_policy(asyncio.WindowsSelectorEventLoopPolicy())


# https://github.com/WyAtu/Perun/blob/c081b9ed0243cecfcea251e72e2905103a6556a1/vuln/postgresql/postgresql_weakpwd.py
async def checkWeakpass(addr, postgreUPList):
    for username, password in postgreUPList:
        try:
            with timeout(5):
                dsn = 'user={} password={} host={} port={}'.format(username, password, addr.split(':')[0], addr.split(':')[1])
                # pool = await aiopg.create_pool(dsn)
                conn = await aiopg.connect(dsn)
                if conn:
                    tqdm.write(Fore.RED + '[+] target maybe postgresql weakpass, {}'.format(addr))
                    return {'name': 'weakpass', 'url': str(addr), 'software': 'postgresql'}
        except asyncio.TimeoutError:
            pass
        except Exception:
            pass
        finally:
            try:
                conn.close()
            except NameError:
                pass


async def postgresqlScan(addr, postgreUPList, pbar):
    vulList = []
    a = await checkWeakpass(addr, postgreUPList)
    if a is not None:
        vulList.append(a)
    pbar.update(1)
    return vulList


if __name__ == '__main__':
    loop = asyncio.get_event_loop()
    loop.run_until_complete(postgresqlScan('127.0.0.1:5444', [['postgres', '123456']], 1))
