# coding=utf-8
from async_timeout import timeout

from exploit.service.base import *


async def checkRce(addr):
    try:
        return {'name': 'rce', 'url': addr, 'software': 'jdwp'}
        # with timeout(5):
        #     reader, writer = await asyncio.open_connection(addr.split(':')[0], int(addr.split(':')[1]))
        #     writer.write(b'ls\r\n')
        #     data = str(await reader.read(1024))
        #     writer.close()
        #     if 'com.alibaba.dubbo' in data and ("token=false" in data or "token=true" not in data):
        #         print('unauth dubbo')
        #         return {'name': 'unauth', 'url': addr, 'software': 'dubbo'}
    except:
        pass
    finally:
        pass
        # try:
        #     writer.close()
        # except NameError:
        #     pass


# byself
async def jdwpScan(addr, pbar):
    vulList = []
    a = await checkRce(addr)
    if a is not None:
        vulList.append(a)
    pbar.update(1)
    return vulList

if __name__ == '__main__':
    pass


