# coding=utf-8

from Exploit.BaseExploit import *
from threading import Thread
import requests
requests.packages.urllib3.disable_warnings()
import os
import json

abs_path = os.getcwd() + os.path.sep


class CmsScan(object):
    def __init__(self, domain, http):
        self.headers = {'User-Agent': "Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.1 (KHTML, like Gecko) Chrome/22.0.1207.1 Safari/537.1"}
        self._http = http.replace('\n', '') if http.startswith('http') else 'http://' + http.replace('\n', '')
        self.domain = domain
        self.cmsscanlist = list()
        with open(abs_path + 'body.txt', 'r', encoding='utf-8') as a, \
                open(abs_path + 'head.txt', 'r', encoding='utf-8') as b, \
                open(abs_path + 'robots.txt', 'r', encoding='utf-8') as d:
            self.body_content = eval(a.read())  # 已经完成
            self.head_content = eval(b.read())  # 已经完成
            self.robots_content = eval(d.read())  # 已经完成

    def header_index_content_scan(self):
        # 基于首页源代码中的特征寻找
        try:
            resp = requests.get(url=self._http, headers=self.headers, allow_redirects=False, timeout=3, verify=False)

            # 迭代器迭代字典
            for keyword, cms in self.body_content.items():
                if keyword in resp.content.decode('utf-8'):
                    self.cmsscanlist.append()
                    return
                else:
                    pass

            for keyword, cms in self.head_content.iteritems():
                if keyword in resp.headers:
                    print("[scan01_headers]: cms识别为 " + cms)
                    break
        except:
            pass

    def robot_scan(self):
        # 根目录robots.txt 文本中的特征判断
        if self._http[-1] != '/':
            self._http = self._http + '/'
        try:
            resp = requests.get(url=self._http + 'robots.txt', headers=self.headers, allow_redirects=False, timeout=3, verify=False)
            for robots in self.robots_content:
                if robots in resp.content.decode('utf-8'):
                    print("[robots_scan]: cms识别为 " + robots)
                    break
        except:
            pass

    @property
    def main(self):
        thread_list.append(Thread(target=a.header_index_content_scan, args=()))
        thread_list.append(Thread(target=a.robot_scan, args=()))

        for t in thread_list:
            t.start()
        for t in thread_list:
            t.join()


if '__main__' == __name__:
    a = CmsScan('', 'http://news.eeeqi.cn/')
    thread_list = []

    thread_list.append(Thread(target=a.header_index_content_scan, args=()))
    thread_list.append(Thread(target=a.robot_scan, args=()))
    # thread_list.append(Thread(target=a.sub_dir_content_scan, args=()))
    # thread_list.append(Thread(target=a.md5_scan, args=()))

    for t in thread_list:
        t.start()
    for t in thread_list:
        t.join()